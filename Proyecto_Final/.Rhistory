color = Gremio_trofico, size = No_observaciones)) +
facet_wrap(~UICN)
#GLM para ver que afecta el numero de registros
modelo_aves <- glm(No_observaciones ~ bio_01 + bio_07 + bio_12 +
UICN + Gremio_trofico + Ambiente + Origen,
data = Aves_completa, family = poisson)
summary(modelo_aves)
# transformación de variables categoricas a magnitudes numericas
uicn_orden <- c("LC" = 1,
"NT" = 2,
"VU" = 3,
"EN" = 4,
"CR" = 5,
"EW" = 6,
"EX" = 7)
# transformación de variables categoricas a magnitudes numericas
uicn_orden <- c("LC" = 1,
"NT" = 2,
"VU" = 3,
"EN" = 4,
"CR" = 5,
"EW" = 6,
"EX" = 7)
Aves_numerica<- Aves_completa %>%
mutate(UICN_num = uicn_orden[UICN])
#Guardado de la base numerica
write_csv(Aves_numerica, "Aves_numerica.csv")
Aves_numerico <- read.csv("Aves_numerica.csv")
data1 <- Aves_numerico[, c(2,3,4,13,11,12)]# Solo las variables numéricas
#Guardado de la base numerica
write_csv(Aves_numerica, "Aves_numerica.csv")
Aves_numerico <- read.csv("Aves_numerica.csv")
data1 <- Aves_numerico[, c(2,3,4,13,11,12)]# Solo las variables numéricas
View(Aves_numerico)
# transformación de variables categoricas a magnitudes numericas
uicn_orden <- c("LC" = 1,
"NT" = 2,
"VU" = 3,
"EN" = 4,
"CR" = 5,
"EW" = 6,
"EX" = 7)
Aves_numerica<- Aves_completa %>%
mutate(UICN_num = uicn_orden[UICN])
gremio_orden <- c("Omnivoro" = 1,
"Carnivoro" = 2,
"Insectivoro" = 2,
"Frugivoro" = 2,
"Nectarivoro" = 3,
"Piscivoro" = 2,
"Carn_acuatico" = 3,
"Inv_terrestre" = 3,
"Inv_acuatico" = 3,
"Inv_migratorio" = 4,
"Gran_migratorio" = 4)
Aves_numerica <- Aves_numerica %>%
mutate(Gremio_num = gremio_orden[`Gremio_trofico`])
Aves_numerica <- Aves_numerica %>%
mutate(
Ambiente_num = case_when(
Ambiente == "Terrestre" ~ 1,
Ambiente == "Dulceacuicola_Terrestre" ~ 2,
Ambiente == "Dulceacuicola" ~ 3,
Ambiente == "Dulceacuicola_Salobre" ~ 4,
Ambiente == "Marino_Dulceacuicola_Salobre" ~ 5,
TRUE ~ NA_real_
)
)
data1 <- Aves_numerica[, c(2,3,4,13,11,12)]# Solo las variables numéricas
# Realizar PCA 1 (sin observaciones)
pca1 <- prcomp(data1, scale = TRUE)  # scale = TRUE para estandarizar
pca1
summary(pca1)
#Biplot
autoplot(pca1, data1 = Aves_numerico, #colour = 'Species',
loadings = TRUE, loadings.colour = 'darkgreen',
loadings.label = TRUE, loadings.label.size = 3) +
theme_minimal()+
labs( title = "PCA sin considerar las observaciones", subtitle = "Datos extraidos de CONABIO y GBIF")
Realizar PCA 2 (con observaciones)
#Realizar PCA 2 (con observaciones)
data2 <- Aves_numerico[, c(2,3,4,6,13,11,12)]
#Realizar PCA 2 (con observaciones)
data2 <- Aves_numerica[, c(2,3,4,6,13,11,12)]
pca2 <- prcomp(data2, scale = TRUE)  # scale = TRUE para estandarizar
pca2
summary(pca2)
#Biplot
autoplot(pca2, data2 = Aves_completa, #colour = 'Species',
loadings = TRUE, loadings.colour = 'darkgreen',
loadings.label = TRUE, loadings.label.size = 3) +
theme_minimal()+
labs( title = "PCA considerando observaciones", subtitle = "Datos extraidos de CONABIO y GBIF")
#Librerias utilizadas
library(rgbif)
library(tidyverse)
library(sf)
library(rworldxtra)
library(geodata)
library(ggspatial)
library(terra)
library(tidyterra)
library(paletteer)
library(ggcorrplot)
library(ggfortify)
library(ggplot2)
library(ggridges)
library(plotly)
library(patchwork)
library(magick)
library(grid)
library(patchwork)
library(factoextra)
library(FactoMineR)
library(vegan)
#Creamos un vector con las especies para su posterior uso:
especies <- c("Aphelocoma ultramarina",
"Atlapetes pileatus",
"Campylorhynchus megalopterus",
"Campylorhynchus rufinucha",
"Cardellina rubra",
"Catharus occidentalis",
"Dendrortyx barbatus",
"Doricha eliza",
"Dryobates stricklandi",
"Geothlypis nelsoni",
"Hylorchilus sumichrasti",
"Melanotis caerulescens",
"Momotus coeruliceps",
"Oriturus superciliosus",
"Periporphyrus celaeno",
"Pipilo ocai",
"Selasphorus heloisa",
"Zentrygon carrikeri",
"Accipiter cooperii",
"Amazilia tzacatl",
"Busarellus nigricollis",
"Charadrius vociferus",
"Elanoides forficatus",
"Falco columbarius",
"Ictinia mississippiensis",
"Jacana spinosa",
"Laterallus ruber",
"Megaceryle torquata",
"Nyctidromus albicollis",
"Ortalis vetula",
"Passerina cyanea",
"Piaya cayana",
"Pluvialis squatarola",
"Rallus elegans",
"Spiza americana",
"Streptoprocne rutila"
)
#Hacemos una paleta de colores con viridis.
paleta <- colorRampPalette(viridis(option = "viridis", n = 100))(100)
library(tidyverse) #Conjunto de paquetes para manipulación y visualización de datos
library(ggplot2) #(incluido en tidyverse) - Sistema de gráficos elegantes
library(patchwork) #Combinar múltiples gráficos en uno
library(ggcorrplot) #Visualización de matrices de correlación
library(ggfortify) #Visualización de resultados de análisis multivariado
library(paletteer) #Colección completa de paletas de colores
library(grid) #Sistema gráfico de bajo nivel
library(magick) #Manipulación de imágenes
library(sf) #Trabajar con datos vectoriales (puntos, líneas, polígonos)
library(terra) #Manipulación de datos raster (imágenes satelitales, modelos digitales)
library(tidyterra) #Integración entre terra y tidyverse
library(geodata) #Descargar datos geoespaciales (clima, elevación, etc.)
library(rworldxtra) #Mapas mundiales de alta resolución
library(ggspatial) #Elementos para mapas (escalas, norte, etc.)
library(rgbif) #Acceder a datos de Global Biodiversity Information Facility (GBIF)
library(vegan) #Análisis ecológicos y de comunidades (diversidad, ordenación)
library(factoextra) #Visualización de resultados de análisis multivariado
library(FactoMineR) #Análisis de componentes principales (PCA) y multivariado
#PENDIENTE
library(ggridges) #Gráficos de distribución tipo "ridge"
library(plotly) #Gráficos interactivos
#Hacemos una paleta de colores con viridis.
paleta <- colorRampPalette(viridis(option = "viridis", n = 100))(100)
#Hacemos una paleta de colores con viridis.
paleta <- colorRampPalette(viridis(option = "D", n = 100))(100)
library(viridis) #Paleta de colores específica
#Hacemos una paleta de colores con viridis.
paleta <- colorRampPalette(viridis(option = "D", n = 100))(100)
# Matriz de correlación entre variables numéricas
cor_aves <- cor(Aves_completa[,c("bio_01", "bio_07", "bio_12", "No_observaciones")])
corrplot::corrplot(cor_aves, col=paleta)
# Matriz de correlación entre variables numéricas
cor_aves <- cor(Aves_completa[,c("bio_01", "bio_07", "bio_12", "No_observaciones")])
corrplot::corrplot(cor_aves, tl.col = "black", col=paleta)
# Cluster por variables ambientales
cluster_aves <- scale(Aves_completa[,c("bio_01", "bio_07","bio_12")])
kmeans_result <- kmeans(cluster_aves, centers = 3)
fviz_cluster(kmeans_result, cluster_aves, col = paleta)
# Cluster por variables ambientales
cluster_aves <- scale(Aves_completa[,c("bio_01", "bio_07","bio_12")])
kmeans_result <- kmeans(cluster_aves, centers = 3)
#Creamos un vector para nombrar la escala
etiquetas <- c("Temperatura promedio anual", "Rango de Temperatura", "Precipitación Anual")
fviz_cluster(kmeans_result, cluster_aves, palette = paleta) +
scale_color_discrete(labels = etiquetas) +
scale_fill_discrete(labels = etiquetas)
fviz_cluster(kmeans_result, cluster_aves) +
scale_color_discrete(labels = etiquetas, colour = paleta) +
scale_fill_discrete(labels = etiquetas, colour = paleta)
fviz_cluster(kmeans_result, cluster_aves) +
scale_color_discrete(labels = etiquetas, colour = c("#4B0055","#009796","#FDE333")) +
scale_fill_discrete(labels = etiquetas, colour = c("#4B0055","#009796","#FDE333"))
fviz_cluster(kmeans_result, data = cluster_aves, palette = c("#4B0055","#009796","#FDE333")) +
scale_color_discrete(labels = etiquetas) +
scale_fill_discrete(labels = etiquetas)
fviz_cluster(kmeans_result, data = cluster_aves, colour  = c("#4B0055","#009796","#FDE333")) +
scale_color_discrete(labels = etiquetas) +
scale_fill_discrete(labels = etiquetas)
fviz_cluster(kmeans_result, data = cluster_aves, col()  = c("#4B0055","#009796","#FDE333")) +
fviz_cluster(kmeans_result, data = cluster_aves, col= c("#4B0055","#009796","#FDE333")) +
scale_color_discrete(labels = etiquetas) +
scale_fill_discrete(labels = etiquetas)
fviz_cluster(kmeans_result, data = cluster_aves, colours = c("#4B0055","#009796","#FDE333")) +
scale_color_discrete(labels = etiquetas) +
scale_fill_discrete(labels = etiquetas)
fviz_cluster(kmeans_result, data = cluster_aves, palette  = c("#4B0055","#009796","#FDE333")) +
scale_color_discrete(labels = etiquetas) +
scale_fill_discrete(labels = etiquetas)
fviz_cluster(kmeans_result, data = cluster_aves, palette  = c("#4B0055","#009796","#FDE333")) +
scale_color_discrete(labels = etiquetas)
fviz_cluster(kmeans_result, data = cluster_aves, palette  = c("#4B0055","#009796","#FDE333"))
fviz_cluster(kmeans_result, data = cluster_aves, palette  = c("#4B0055","#009796","#FDE333")) +
guides(
color = guide_legend(labels = etiquetas),
fill = guide_legend(labels = etiquetas))
fviz_cluster(kmeans_result, data = cluster_aves, palette  = c("#4B0055","#009796","#FDE333")) +
guides(
color = guide_legend(title = FALSE , labels = etiquetas),
fill = guide_legend(title = FALSE , labels = etiquetas))
fviz_cluster(kmeans_result, data = cluster_aves, palette  = c("#4B0055","#009796","#FDE333")) +
guides(
color = guide_legend(title = "Variable" , labels = etiquetas),
fill = guide_legend(title = "Variable" , labels = etiquetas))
View(Aves_completa)
# Cluster por variables ambientales
cluster_aves <- scale(Aves_completa[,c("bio_01", "bio_07","bio_12")])
kmeans_result <- kmeans(cluster_aves, centers = 3)
#Creamos un vector para nombrar la escala
etiquetas <- c("Temperatura promedio anual", "Rango de Temperatura", "Precipitación Anual")
fviz_cluster(kmeans_result, data = cluster_aves, palette  = c("#4B0055","#009796","#FDE333")) +
guides(
color = guide_legend(title = "Variable" , labels = etiquetas),
fill = guide_legend(title = "Variable" , labels = etiquetas))
fviz_cluster(kmeans_result, data = cluster_aves, palette  = c("#4B0055","#009796","#FDE333")) +
guides(
color = guide_legend(labels = etiquetas, name = "Variable ambiental"),
fill = guide_legend(labels = etiquetas, name = "Variable ambiental"))
fviz_cluster(kmeans_result, data = cluster_aves, palette  = c("#4B0055","#009796","#FDE333")) +
guides(
color = guide_legend(title = "Grupos", labels = etiquetas, name = "Variable ambiental"),
fill = guide_legend(title = "Grupos", labels = etiquetas, name = "Variable ambiental"))
fviz_cluster(kmeans_result, data = cluster_aves, palette  = c("#4B0055","#009796","#FDE333")) +
scale_color_discrete(labels = etiquetas) +
scale_fill_discrete(labels = etiquetas)
fviz_cluster(kmeans_result, data = cluster_aves, palette  = c("#4B0055","#009796","#FDE333")) +
guides(
color = guide_legend(title = "Grupos", labels = etiquetas),
fill = guide_legend(title = "Grupos", labels = etiquetas)
)
# Boxplots por categorías
bxp1 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_01))
bxp1
bxp2 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_07))
bxp2
bxp3 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_12))
bxp3
# Boxplots por categorías
bxp1 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_01)) +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
))
bxp1
bxp2 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_07))  +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
))
bxp2
bxp3 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_12))  +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
))
bxp3
# Boxplots por categorías
bxp1 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_01)) +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_d(option = "viridis")
bxp1
bxp2 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_07))  +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_d(option = "viridis")
bxp2
bxp3 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_12))  +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_d(option = "viridis")
bxp3
# Boxplots por categorías
bxp1 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_01)) +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_c(option = "viridis")
bxp1
bxp2 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_07))  +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_c(option = "viridis")
bxp2
bxp3 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_12))  +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_c(option = "viridis")
bxp3
# Boxplots por categorías
bxp1 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_01, fill = bio_01)) +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_c(option = "viridis")
bxp1
bxp2 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_07))  +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_c(option = "viridis")
bxp2
bxp3 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_12))  +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_c(option = "viridis")
bxp3
# Boxplots por categorías
bxp1 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_01, fill = Gremio_trofico)) +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_c(option = "viridis")
bxp1
# Boxplots por categorías
bxp1 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_01, fill = Gremio_trofico)) +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_d(option = "viridis")
bxp1
bxp2 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_07))  +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_c(option = "viridis")
bxp2
bxp3 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_12))  +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_c(option = "viridis")
bxp3
# Boxplots por categorías
bxp1 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_01, fill = Gremio_trofico)) +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_d(option = "viridis")
bxp1
bxp2 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_07, fill = Gremio_trofico))  +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_d(option = "viridis")
bxp2
bxp3 <- ggplot2::ggplot(Aves_completa) +
geom_boxplot(aes(x = Gremio_trofico, y = bio_12, fill = Gremio_trofico))  +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1
)) +
scale_fill_viridis_d(option = "viridis")
bxp3
bxp_T <-  wrap_plots(bxp1, bxp2, bxp3, ncol = 3) +
plot_annotation(
title = "Distribución del Grupo trófico por Variable ambiental"
)
# Guardar el gráfico con alta resolución
ggsave(filename = "bxp_T.png",   plot = bxp_T, width = 10,height = 7, dpi = 400,units = "in", bg = "white")
# Guardar el gráfico con alta resolución
ggsave(filename = "bxp_T.png",   plot = bxp_T, width = 5,height = 10, dpi = 400,units = "in", bg = "white")
# Guardar el gráfico con alta resolución
ggsave(filename = "bxp_T.png",   plot = bxp_T, width = 20,height = 5, dpi = 400,units = "in", bg = "white")
![](bxp_T.png)
## Mapas de distribución de condiciones ambientales por gremio trófico
ggplot(Aves_completa) +
geom_point(aes(x = bio_01, y = bio_12,
color = Gremio_trofico, size = No_observaciones)) +
facet_wrap(~UICN) +
scale_color_viridis_d(option = "viridis")
ggplot(data = c(diversidad1,diversidad2,diversidad3), aes(x = "Categoría", y = "Diversidad")) +
barplot()+
scale_fill_viridis()
ggplot(data = c(diversidad1,diversidad2,diversidad3), aes(x = "Categoría", y = "Diversidad")) +
geom_bar()+
scale_fill_viridis()
# Primero combinar los dataframes correctamente
diversidades <- bind_rows(
diversidad1 %>% mutate(grupo = "Gremio Trófico"),
diversidad2 %>% mutate(grupo = "Ambiente"),
diversidad3 %>% mutate(grupo = "Origen")
)
# Primero combinar los dataframes correctamente
diversidades <- data.frame(
Categoría = c(rep("Gremio Trófico", length(diversidad1)),
rep("Ambiente", length(diversidad2)),
rep("Origen", length(diversidad3))),
Diversidad = c(diversidad1, diversidad2, diversidad3)
)
ggplot(data = diversidades, aes(x = Categoría, y = Diversidad, fill = Categoría)) +
geom_bar(stat = "identity") +
scale_fill_viridis_d() +  # _d para variables discretas
labs(x = "Categoría", y = "Diversidad")
ggplot(data = diversidades, aes(x = Categoría, y = Diversidad, fill = Categoría)) +
geom_bar(stat = "identity") +
scale_fill_viridis_d() +  # _d para variables discretas
labs(title = "Diversidad por Categoría", x = "Categoría", y = "Diversidad")
Aves_numerico <- read.csv("Aves_numerica.csv")
data1 <- Aves_numerica[, c(2,3,4,13,11,12)]# Solo las variables numéricas
# Realizar PCA 1 (sin observaciones)
pca1 <- prcomp(data1, scale = TRUE)  # scale = TRUE para estandarizar
pca1
summary(pca1)
#Biplot
autoplot(pca1, data1 = Aves_numerico, #colour = 'Species',
loadings = TRUE, loadings.colour = 'darkgreen',
loadings.label = TRUE, loadings.label.size = 3) +
theme_minimal()+
labs( title = "PCA sin considerar las observaciones", subtitle = "Datos extraidos de CONABIO y GBIF")
#Biplot
autoplot(pca1, data1 = Aves_numerico, #colour = 'Species',
loadings = TRUE, loadings.colour = '#481C66',
loadings.label.colour = 'black',
loadings.label = TRUE, loadings.label.size = 3) +
theme_minimal()+
labs( title = "PCA sin considerar las observaciones", subtitle = "Datos extraidos de CONABIO y GBIF")
#Realizar PCA 2 (con observaciones)
data2 <- Aves_numerica[, c(2,3,4,6,13,11,12)]
pca2 <- prcomp(data2, scale = TRUE)  # scale = TRUE para estandarizar
pca2
summary(pca2)
#Biplot
autoplot(pca2, data2 = Aves_completa, #colour = 'Species',
loadings = TRUE, loadings.colour = 'darkgreen',
loadings.label.colour = 'black',
loadings.label = TRUE, loadings.label.size = 3) +
theme_minimal()+
labs( title = "PCA considerando observaciones", subtitle = "Datos extraidos de CONABIO y GBIF")
#Biplot
autoplot(pca2, data2 = Aves_completa, #colour = 'Species',
loadings = TRUE, loadings.colour = '#481C66',
loadings.label.colour = 'black',
loadings.label = TRUE, loadings.label.size = 3) +
theme_minimal()+
labs( title = "PCA considerando observaciones", subtitle = "Datos extraidos de CONABIO y GBIF")
